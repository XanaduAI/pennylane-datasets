name: "Test and Lint"
on:
  pull_request:
    paths:
      - 'lib/**'
      - 'pyproject.toml'
      - 'poetry.lock'
      - '.github/worklows/test_lint.yml'
  push:
    branches:
    - main

jobs:
  lint_test_build:
    runs-on: ubuntu-latest
    env:
        PYTHONPATH: "lib/:${PYTHONPATH}"

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup virtualenv 
        uses: ./.github/actions/setup-venv
        with:
          venv-path: .venv

      - name: Check poetry.lock
        run: .venv/bin/python3 -m poetry lock --check

      - name: Run formatters
        run: |
          .venv/bin/python3 -m ruff check lib/
          .venv/bin/python3 -m ruff format --check lib/

      - name: Run tests
        run: .venv/bin/python3 -m pytest lib/tests/

      - name: Run build
        run: .venv/bin/python3 -m dsets build
      
      - name: Cache build
        uses: actions/cache@v4
        with:
          path: ./_build
          key: ${{ github.sha }}
  
  push_build:
    needs: lint_test_build
    runs-on: ubuntu-latest
    env:
        PYTHONPATH: "lib/:${PYTHONPATH}"
    strategy:
      matrix:
        env: [staging]

    environment: ${{ matrix.env }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup virtualenv 
        uses: ./.github/actions/setup-venv
        with:
          venv-path: .venv
      
      - name: Restore cached build
        id: restore-build
        uses: actions/cache/restore@v4
        with:
          path: ./_build
          key: ${{ github.sha }}
      
      


