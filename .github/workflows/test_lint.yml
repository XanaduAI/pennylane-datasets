name: "Test and lint lib"
on:
  pull_request:
    paths:
      - 'lib/**'
      - 'tests/**'
      - 'pyproject.toml'
      - 'poetry.lock'
  push:
    branches:
    - main

jobs:
  test_and_lint:
    runs-on: ubuntu-latest
    env:
        PYTHONPATH: "lib/:${PYTHONPATH}"
        POETRY_VIRTUALENVS_CREATE: "false"

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Get Cache Date
        id: get-cache-date
        run: |
            echo "date=$(/bin/date -u "+%Y%m%d")" >> $GITHUB_OUTPUT
        shell: bash

      - name: Cache virtualenv
        id: cache-venv
        uses: actions/cache@v4
        with:
          path: .venv
          key: ${{ steps.get-cache-date.outputs.date }}-${{ hashfiles('pyproject.toml', 'poetry.lock') }}

      - name: Setup venv
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: |
            python3.11 -m venv .venv
            .venv/bin/pip install "poetry==1.4.0"
            .venv/bin/poetry install --with dev --no-root

      - name: Check poetry.lock
        run: .venv/bin/poetry lock --check

      - name: Run formatters
        run: |
            .venv/bin/poetry run ruff check lib/ tests/
            .venv/bin/poetry run ruff format --check lib/ tests/

      - name: Run tests
        run: .venv/bin/poetry run pytest tests/
